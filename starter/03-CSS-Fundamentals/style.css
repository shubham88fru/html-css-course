/* 1) styles defined in * apply to every element on page,
    but with a catch that these properties are not inherited.
    It has lowest priority in case of conflicts 
2) Global reset. Will start fresh since applies to all, but since 
    margin and padding aren't inherited it wont cause unexpected
    margin/padding for child elements. And also since universal 
    selector has almost nill specificity, it will be for sure
    overriden by any other value defined by any other selector. 
*/
* {
  margin: 0;
  padding: 0;
}

/* Property defined in body get inherited */
body {
  font-family: sans-serif;
  color: #444;
  position: relative; /* absoulutely positioned elements will take top, bottom etc wrt to body*/
}

.container {
  width: 700px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px; /*top-bottom left-right*/
  margin-bottom: 60px;
  /* height: 80px; */
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  /* padding-top: 50px;
  padding-bottom: 50px; */
  padding: 50px 0;
  width: 500px;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}

footer p {
  font-size: 16px;
}

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
}

/* Selects all li's which are first
child of their parent */
li:first-child {
  font-weight: bold;
}

/* Selects all li's which are last
child of their parent */
li:last-child {
  font-style: italic;
}

/* Selects all li's which are 2 child
of their parent  */
li:nth-child(2) {
  color: red;
}

/* Selects all li's which are odd numbered
child of their parent */
li:nth-child(odd) {
  color: blue;
}

/* This wont work, since there's no p which is
first child of article element. Although, there are p(s)
nested deeper inside article element */
article p:first-child {
  color: red;
}

/* Targets only those anchor elements that 
have href attribute */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline dotted orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}

.post-img {
  width: 100%; /*% of width of parent container*/
  height: auto;
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px;
  display: block; */
  display: inline-block;
  margin-right: 20px;
  margin-top: 10px;
}

/* chaining pseudo classes is possible */
nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  bottom: 50px; /* by default the px for top left bottom etc for absolute position is wrt viewport*/
  right: 50px;
}

/* pseudo elements are written with 2 colons */
h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* + -> adajacent sibling selector 
  Below selects all first lines of p(s) 
  which are adajacent sibling(next to each other)
  to h3
*/
h3 + p::first-line {
  color: red;
}

h2 {
  position: relative;
}
/* `after` pseudo element creats a pseudo element
  that will automatically become the very last child
  of the selected element. 
  
  `before` pseudo element creats a pseudo element
  that will automatically become the very first child
  of the selected element.
  */
h2::after {
  content: 'TOP';
  color: #444;
  background-color: #ffe70e;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;

  position: absolute;
  top: -10px;
  right: -25px;
}
